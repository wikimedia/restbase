swagger: '2.0'
info:
  version: '1.0.0-beta'
  title: MediaWiki Content API
  description: Basic MediaWiki content api.
  termsofservice: https://github.com/wikimedia/restbase#restbase
  contact:
    name: Services
    email: services@lists.wikimedia.org
    url: https://www.mediawiki.org/wiki/Services
  license:
    name: Apache licence, v2
    url: https://www.apache.org/licenses/LICENSE-2.0
x-default-params:
  domain: en.wikipedia.org
paths:
  /{module:page}/:
    get:
      tags:
        - Page content
      description: >
        List page properties / page content sub-apis.

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Stable)
      produces:
        - application/json
      responses:
        '200':
          description: The queriable sub-items
          schema:
            $ref: '#/definitions/listing'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-monitor: false

  /{module:page}/title/:
    get:
      tags:
        - Page content
      description: >
        List all pages.

        Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental). Don't rely on this.
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: The next page token
          type: string
          required: false
      responses:
        '200':
          description: The queriable list of page titles
          schema:
            $ref: '#/definitions/listing'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/page_revisions/page/
              query:
                page: '{page}'
      x-monitor: false

  /{module:page}/title/{title}:
    get:
      tags:
        - Page content
      description: >
        Returns the latest revision ID for the title present in storage.
        Supply the Cache-Control: no-cache header to obtain the latest available revision ID

        Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)
      produces:
        - application/json
      parameters:
        - name: title
          in: path
          description: The page title.
          type: string
          required: true
      responses:
        '200':
          description: The latest revision for the title
          schema:
            $ref: '#/definitions/revision'
        '404':
          description: Unknown page title or no revisions found
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/page_revisions/page/{title}
              headers:
                cache-control: '{cache-control}'
                if-unmodified-since: '{if-unmodified-since}'
      x-monitor: true
      x-amples:
        #- title: Get rev of by title from MW
        #  request:
        #    params:
        #      title: Foobar
        #    headers:
        #      cache-control: no-cache
        #  response:
        #    status: 200
        #    headers:
        #      etag: /.+/
        #      content-type: application/json
        #    body:
        #      items:
        #        - title: 'Foobar'
        #          rev: /\d+/
        #          tid: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/
        #          comment: /.*/
        - title: Get rev by title from storage
          request:
            params:
              title: Foobar
          response:
            status: 200
            headers:
              etag: /.+/
              content-type: application/json
            body:
              items:
                - title: 'Foobar'
                  rev: /\d+/
                  tid: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/
                  comment: /.*/

  /{module:page}/title/{title}/:
    get:
      tags:
        - Page content
      description: >
        List revisions for a title. Currently this lists all revisions that
        ever used this title and are stored in RESTBase, but eventually it
        should probably return the linear history (across renames) of the page
        currently using this title.

        Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)
      produces:
        - application/json
      parameters:
        - name: title
          in: path
          description: The page title.
          type: string
          required: true
        - name: page
          in: query
          description: The next page token
          type: string
          required: false
      responses:
        '200':
          description: The queriable list of page revisions.
          schema:
            $ref: '#/definitions/listing'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/page_revisions/page/{title}/
              query:
                page: '{page}'
      x-monitor: false

  /{module:page}/html/:
    get:
      tags:
        - Page content
      description: >
        List titles for which an HTML representation is available. Currently
        this only lists pages that have revisions stored in RESTBase.

        Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: The next page token
          type: string
          required: false
      responses:
        '200':
          description: The queriable list of page titles
          schema:
            $ref: '#/definitions/listing'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/page_revisions/page/
              query:
                page: '{page}'
      x-monitor: false

  /{module:page}/html/{title}:
    get:
      tags:
        - Page content
      description: >
        Retrieve the latest html for a page title available in storage.

        If you know the revision as well, then please use the
        `{title}/{revision}` end point instead for better performance.

        Supply the `Cache-Control: no-cache` header to force a fetch
        of the most recent version.

        See [the MediaWiki DOM
        spec](https://www.mediawiki.org/wiki/Parsoid/MediaWiki_DOM_spec) for a
        description of the MediaWiki-specific semantic markup in this HTML.

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      parameters:
        - name: title
          in: path
          description: The page title.
          type: string
          required: true
        - name: sections
          in: query
          description: Comma-separated list of section IDs
          type: string
      produces:
        - text/html; profile="mediawiki.org/specs/html/1.1.0"
      responses:
        '200':
          description: >
            The html for the given page title. Conforms to
            https://www.mediawiki.org/wiki/Parsoid/MediaWiki_DOM_spec.
        '404':
          description: Unknown page title
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              # Directly return the latest HTML. Alternatively, we could also try
              # relative redirects. A relative location header of 'foo/bar' seems to
              # work in current Chrome and Firefox.
              # See also http://tools.ietf.org/html/rfc7231#section-7.1.2
              uri: /{domain}/sys/parsoid/html/{title}
              headers:
                cache-control: '{cache-control}'
                if-unmodified-since: '{if-unmodified-since}'
                x-restbase-mode: '{x-restbase-mode}'
                x-restbase-parentrevision: '{x-restbase-parentrevision}'
                x-restbase-parenttitle: '{x-restbase-parenttitle}'
              query:
                sections: '{sections}'
      x-monitor: true
      x-amples:
        # FIXME: This depends on our 'no change' detection optimization to
        # avoid filling up storage with re-renders. We have plenty of data on
        # Parsoid backend requests, so there shouldn't be a need to test this
        # per-instance.
        #- title: Get html by title from Parsoid
        #  request:
        #    params:
        #      title: Foobar
        #    headers:
        #      cache-control: no-cache
        #  response:
        #    status: 200
        #    headers:
        #      etag: /.+/
        #      content-type: /^text\/html.+/
        #    body: /^<!DOCTYPE html>.*/
        - title: Get html by title from storage
          request:
            params:
              title: Foobar
          response:
            status: 200
            headers:
              etag: /.+/
              content-type: /^text\/html.+/
            body: /^<!DOCTYPE html>.*/
    post:
      tags:
        - Page content
      description: >
        Save a new revision of a page given in HTML format.

        For new pages, or when editting the latest revision of a page,
        the `base_etag` parameter should be left empty. For editing old revisions,
        it should contain the ETag header of the revision the edit is derived from.

        The latest page revision ETag header could be provided in the If-Match header
        to detect edit conflicts. If the new page is created, appropriate user cookies
        must be provided.

        See [the MediaWiki DOM spec](https://www.mediawiki.org/wiki/Parsoid/MediaWiki_DOM_spec)
        for a description of the MediaWiki-specific semantic markup needed by this API
        end-point.

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      parameters:
        - name: title
          in: path
          description: The page title.
          type: string
          required: true
        - name: base_etag
          in: formData
          description: The ETag header of the revision the edit is based on.
          type: string
          required: false
        - name: html
          in: formData
          description: The HTML of the page to save
          type: string
          required: true
        - name: csrf_token
          in: formData
          description: The CRSF edit token provided by the MW API
          type: string
          required: true
        - name: comment
          in: formData
          description: The summary of the change
          type: string
          required: false
        - name: is_minor
          in: formData
          description: Whether this represents a minor change
          type: boolean
          required: false
        - name: is_bot
          in: formData
          description: Whether the change is being made by a bot
          type: boolean
          required: false
      consumes:
        - multipart/form-data
      produces:
        - application/json
      responses:
        '200':
          description: The existing revision of the page matches the sent text
        '201':
          description: A new revision of the page has been created
        '400':
          description: Invalid request - lack of required parameters, bad ETags etc.
          schema:
            $ref: '#/definitions/problem'
        '409':
          description: Edit conflict
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      # RB doesn't check for permissions, just prepares a request correctly
      security:
        - mediawiki_auth: []
      x-request-handler:
        - post_to_backend:
            request:
              uri: /{domain}/sys/page_save/html/{title}
              headers: '{$.request.headers}'
              body: '{$.request.body}'
      x-monitor: false

  /{module:page}/html/{title}/:
    get:
      tags:
        - Page content
      description: >
        List HTML revisions for a title. This currently only lists revisions
        that are already stored in RESTBase.

        Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)
      produces:
        - application/json
      parameters:
        - name: title
          in: path
          description: The page title
          type: string
          required: true
        - name: page
          in: query
          description: The next page token
          type: string
          required: false
      responses:
        '200':
          description: The list of revisions
          schema:
            $ref: '#/definitions/revisions'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/parsoid/html/{title}/
              headers:
                cache-control: '{cache-control}'
                if-unmodified-since: '{if-unmodified-since}'
                x-restbase-mode: '{x-restbase-mode}'
                x-restbase-parentrevision: '{x-restbase-parentrevision}'
                x-restbase-parenttitle: '{x-restbase-parenttitle}'
              query:
                page: '{page}'
      x-monitor: false

  /{module:page}/html/{title}/{revision}{/tid}:
    get:
      tags:
        - Page content
      description: >
        Retrieve the html for a given revision (and optional timeuuid).

        See [the MediaWiki DOM
        spec](https://www.mediawiki.org/wiki/Parsoid/MediaWiki_DOM_spec) for a
        description of the MediaWiki-specific semantic markup in this HTML.

        This HTML can be edited using arbitrary HTML tools. The modified HTML
        can be converted back to wikitext using the
        [/transform/html/to/wikitext{/title}{/revision}](#!/Transforms/transform_html_to_wikitext__title___revision__post)
        entry point.

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      operationId: getFormatRevision
      produces:
        - text/html; profile="mediawiki.org/specs/html/1.1.0"
      parameters:
        - name: title
          in: path
          description: The page title
          type: string
          required: true
        - name: revision
          in: path
          description: The revision
          type: string
          required: true
        - name: tid
          in: path
          description: The revision's time ID
          type: string
        - name: sections
          in: query
          description: Comma-separated list of section IDs
          type: string
      responses:
        '200':
          description: >
            The html for the given page, revision and tid. Conforms to
            https://www.mediawiki.org/wiki/Parsoid/MediaWiki_DOM_spec.
        '400':
          description: Invalid revision or tid
          schema:
            $ref: '#/definitions/problem'
        '403':
          description: Access to the specific revision is restricted
          schema:
            $ref: '#/definitions/problem'
        '404':
          description: Unknown page, revision or tid
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/parsoid/html/{title}/{revision}{/tid}
              headers:
                cache-control: '{cache-control}'
                if-unmodified-since: '{if-unmodified-since}'
                x-restbase-mode: '{x-restbase-mode}'
                x-restbase-parentrevision: '{x-restbase-parentrevision}'
                x-restbase-parenttitle: '{x-restbase-parenttitle}'
              query:
                sections: '{sections}'
      x-monitor: false

  /{module:page}/data-parsoid/:
    get:
      tags:
        - Page content
      description: >
        List titles for which the data-parsoid property is available. This
        currently only lists pages which have revisions stored in RESTBase.

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: The next page token
          type: string
          required: false
      responses:
        '200':
          description: The queriable list of page titles
          schema:
            $ref: '#/definitions/listing'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              # Fixme: only list pages that have at least one revision with content
              # model 'wikitext'
              uri: /{domain}/sys/page_revisions/page/
              query:
                page: '{page}'
      x-monitor: false

  /{module:page}/data-parsoid/{title}:
    get:
      tags:
        - Page content
      description: >
        Retrieve the latest data-parsoid (private Parsoid metadata)

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      parameters:
        - name: title
          in: path
          description: the title of page content
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: data-parsoid JSON blob
          schema:
            $ref: '#/definitions/data-parsoid'
        '404':
          description: Unknown page title
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/parsoid/data-parsoid/{title}
              headers:
                cache-control: '{cache-control}'
                if-unmodified-since: '{if-unmodified-since}'
                x-restbase-mode: '{x-restbase-mode}'
                x-restbase-parentrevision: '{x-restbase-parentrevision}'
      x-monitor: true
      x-amples:
        - title: Get data-parsoid by title
          request:
            params:
              title: Foobar
          response:
            status: 200
            headers:
              etag: /.+/
              content-type: application/json
            body:
              counter: /\d+/
              ids: /.*/
              sectionOffsets: /.*/

  /{module:page}/data-parsoid/{title}/:
    get:
      tags:
        - Page content
      description: >
        List data-parsoid revisions for a page. This currently only lists
        revisions stored in RESTBase.

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      produces:
        - application/json
      parameters:
        - name: title
          in: path
          description: The page title
          type: string
          required: true
        - name: page
          in: query
          description: The next page token
          type: string
          required: false
      responses:
        '200':
          description: The list of revisions
          schema:
            $ref: '#/definitions/revisions'
        '404':
          description: Unknown page title
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/parsoid/data-parsoid/{title}/
              headers:
                cache-control: '{cache-control}'
                if-unmodified-since: '{if-unmodified-since}'
                x-restbase-mode: '{x-restbase-mode}'
                x-restbase-parentrevision: '{x-restbase-parentrevision}'
            query:
              page: '{page}'
      x-monitor: false

  /{module:page}/data-parsoid/{title}/{revision}{/tid}:
    get:
      tags:
        - Page content
      description: >
        Retrieve data-parsoid (internal Parsoid metadata) for a given page & revision

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      produces:
        - application/json
      parameters:
        - name: title
          in: path
          description: The page title
          type: string
          required: true
        - name: revision
          in: path
          description: The revision
          type: integer
          required: true
        - name: tid
          in: path
          description: The revision's time ID
          type: string
          required: false
      responses:
        '200':
          description: The latest Parsoid data for the given page
          schema:
            $ref: '#/definitions/data-parsoid'
        '400':
          description: Invalid revision
          schema:
            $ref: '#/definitions/problem'
        '403':
          description: Access to the specific revision is restricted
          schema:
            $ref: '#/definitions/problem'
        '404':
          description: Unknown page, revision or tid
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/parsoid/data-parsoid/{title}/{revision}{/tid}
              headers:
                cache-control: '{cache-control}'
                if-unmodified-since: '{if-unmodified-since}'
                x-restbase-mode: '{x-restbase-mode}'
                x-restbase-parentrevision: '{x-restbase-parentrevision}'
      x-monitor: false

  /{module:page}/revision/:
    get:
      tags:
        - Page content
      description: >
        List revisions. This currently only lists revisions stored in RESTBase.

        Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental). Don't rely on this.
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: The next page token
          type: string
          required: false
      responses:
        '200':
          description: The queriable sub-items
          schema:
            $ref: '#/definitions/listing'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/page_revisions/rev/
              query:
                page: '{page}'
      x-monitor: false

  /{module:page}/revision/{revision}:
    get:
      tags:
        - Page content
      description: >
        Get metadata about a specific revision.

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      produces:
        - application/json
      parameters:
        - name: revision
          in: path
          description: The revision id
          type: integer
          required: true
      responses:
        '200':
          description: The revision's properties
          schema:
            $ref: '#/definitions/revision'
        '400':
          description: Invalid revision
          schema:
            $ref: '#/definitions/problem'
        '403':
          description: Access to the specific revision is restricted
          schema:
            $ref: '#/definitions/problem'
        '404':
          description: Unknown revision id or domain
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/page_revisions/rev/{revision}
              headers:
                cache-control: '{cache-control}'
      x-monitor: true
      x-amples:
        - title: Get rev by ID
          request:
            params:
              domain: en.wikipedia.org
              revision: 642497713
          response:
            status: 200
            headers:
              etag: /.+/
              content-type: application/json
            body:
              items:
                - title: 'Foobar'
                  rev: /\d+/
                  tid: /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/
                  comment: /.*/

  /{module:page}/wikitext/{title}:
    post:
      tags:
        - Page content
      description: >
        Save a new revision of a page.

        For new pages, or when editting the latest revision of a page,
        the `base_etag` parameter should be left empty.
        For editing old revisions, it should contain the ETag header
        of the revision the edit is derived from.

        The latest page revision ETag header could be provided in the If-Match header
        to detect edit conflicts. If the new page is created, appropriate user cookies
        must be provided.

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      parameters:
        - name: title
          in: path
          description: The page title.
          type: string
          required: true
        - name: base_etag
          in: formData
          description: The ETag header of the revision the edit is based on.
          type: string
          required: false
        - name: wikitext
          in: formData
          description: The wikitext source of the page to save
          type: string
          required: true
        - name: csrf_token
          in: formData
          description: The CRSF edit token provided by the MW API
          type: string
          required: true
        - name: comment
          in: formData
          description: The summary of the change
          type: string
          required: false
        - name: is_minor
          in: formData
          description: Whether this represents a minor change
          type: boolean
          required: false
        - name: is_bot
          in: formData
          description: Whether the change is being made by a bot
          type: boolean
          required: false
      consumes:
        - multipart/form-data
      produces:
        - application/json
      responses:
        '200':
          description: The existing revision of the page matches the sent text
        '201':
          description: A new revision of the page has been created
        '400':
          description: Invalid request - lack of required parameters, bad ETags etc.
          schema:
            $ref: '#/definitions/problem'
        '409':
          description: Edit conflict
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      # RB doesn't check for permissions, just prepares a request correctly
      security:
        - mediawiki_auth: []
      x-request-handler:
        - post_to_backend:
            request:
              uri: /{domain}/sys/page_save/wikitext/{title}
              headers: '{$.request.headers}'
              body: '{$.request.body}'
      x-monitor: false

  /{module:transform}/html/to/wikitext{/title}{/revision}:
    post:
      tags:
        - Transforms
      description: >
        Transform HTML to wikitext

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      consumes:
        - multipart/form-data
      produces:
        - text/plain; profile="mediawiki.org/specs/wikitext/1.0.0"
      parameters:
        - name: title
          in: path
          description: The page title
          type: string
          required: false
        - name: revision
          in: path
          description: The page revision
          type: integer
          required: false
        - name: html
          in: formData
          description: The HTML to transform
          type: string
          required: true
        - name: scrub_wikitext
          in: formData
          description: Normalise the DOM to yield cleaner wikitext?
          type: boolean
          required: false
        - name: scrubWikitext
          in: formData
          description: Deprecated, use `scrub_wikitext` instead.
          type: boolean
          required: false
      responses:
        '200':
          description: See wikipage https://www.mediawiki.org/wiki/Parsoid/MediaWiki_DOM_spec
        '403':
          description: Access to the specific revision is restricted
          schema:
            $ref: '#/definitions/problem'
        '404':
          description: Unknown page title or revision
          schema:
            $ref: '#/definitions/problem'
        '409':
          description: Revision was restricted
          schema:
            $ref: '#/definitions/problem'
        '410':
          description: Page was deleted
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/parsoid/transform/html/to/wikitext{/title}{/revision}
              headers:
                if-match: '{if-match}'
              body:
                html: '{html}'
                scrubWikitext: '{scrubWikitext}'
                scrub_wikitext: '{scrub_wikitext}'
      x-monitor: false

  /{module:transform}/wikitext/to/html{/title}{/revision}:
    post:
      tags:
        - Transforms
      description: >
        Transform wikitext to HTML. Note that if you set `stash: true`, you
          also need to supply the title.

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      consumes:
        - multipart/form-data
      produces:
        - text/html; profile="mediawiki.org/specs/html/1.1.0"
      parameters:
        - name: title
          in: path
          description: The page title
          type: string
          required: false
        - name: revision
          in: path
          description: The page revision
          type: integer
          required: false
        - name: wikitext
          in: formData
          description: The Wikitext to transform to HTML
          type: string
          required: true
        - name: bodyOnly
          in: formData
          description: Deprecated. Use `body_only`
          type: boolean
          required: false
        - name: body_only
          in: formData
          description: Return only `body.innerHTML`
          type: boolean
          required: false
        - name: stash
          in: formData
          description: Whether to temporarily stash the result of the transformation
          type: boolean
          required: false
      responses:
        '200':
          description: See wikipage https://www.mediawiki.org/wiki/Parsoid/MediaWiki_DOM_spec
        '403':
          description: access to the specific revision is restricted
          schema:
            $ref: '#/definitions/problem'
        '404':
          description: Unknown page title or revision
          schema:
            $ref: '#/definitions/problem'
        '409':
          description: Revision was restricted
          schema:
            $ref: '#/definitions/problem'
        '410':
          description: Page was deleted
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/parsoid/transform/wikitext/to/html{/title}{/revision}
              body:
                wikitext: '{wikitext}'
                bodyOnly: '{bodyOnly}'
                body_only: '{body_only}'
                stash: '{stash}'
      x-monitor: true
      x-amples:
        - title: Transform wikitext to html
          request:
            params:
              title: Foobar
            body:
              wikitext: == Heading ==
              body_only: true
          response:
            status: 200
            headers:
              content-type: /^text\/html.+/
            body: /^<h2.*> Heading <\/h2>$/

  /{module:transform}/html/to/html{/title}{/revision}:
    post:
      tags:
        - Transforms
      description: >
        Update / refresh / sanitize HTML

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      consumes:
        - multipart/form-data
      produces:
        - text/html; profile="mediawiki.org/specs/html/1.1.0"
      parameters:
        - name: title
          in: path
          description: The page title
          type: string
          required: false
        - name: revision
          in: path
          description: The page revision
          type: integer
          required: false
        - name: html
          in: formData
          description: The HTML to transform
          type: string
          required: true
        - name: bodyOnly
          in: formData
          description: Deprecated. Use `body_only`.
          type: boolean
          required: false
        - name: body_only
          in: formData
          description: Return only `body.innerHTML`
          type: boolean
          required: false
      responses:
        '200':
          description: See wikipage https://www.mediawiki.org/wiki/Parsoid/MediaWiki_DOM_spec
        '403':
          description: access to the specific revision is restricted
          schema:
            $ref: '#/definitions/problem'
        '404':
          description: Unknown page title or revision
          schema:
            $ref: '#/definitions/problem'
        '409':
          description: Revision was restricted
          schema:
            $ref: '#/definitions/problem'
        '410':
          description: Page was deleted
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/parsoid/transform/html/to/html{/title}{/revision}
              headers:
                if-match: '{if-match}'
              body:
                html: '{html}'
                bodyOnly: '{bodyOnly}'
                body_only: '{body_only}'
      x-monitor: false

  /{module:transform}/sections/to/wikitext/{title}/{revision}:
    post:
      tags:
        - Transforms
      description: >
        Transform sections representation to wikitext

        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)
      consumes:
        - application/json
        - multipart/form-data
      produces:
        - text/html; profile="mediawiki.org/specs/html/1.1.0"
      parameters:
        - name: title
          in: path
          description: The page title
          type: string
          required: true
        - name: revision
          in: path
          description: The page revision
          type: integer
          required: true
        - name: sections
          in: body
          description: Sections to transform
          required: true
          schema:
            type: 'object'
            properties:
              sections:
                example: '{"mwAg":"<h2>First Section replaced</h2><h2>Appended Section</h2>"}'
            required:
              - sections
      responses:
        '200':
          description: See wikipage https://www.mediawiki.org/wiki/Parsoid/MediaWiki_DOM_spec
        '400':
          description: Illegal JSON provided or section id does not exist
          schema:
            $ref: '#/definitions/problem'
        '403':
          description: access to the specific revision is restricted
          schema:
            $ref: '#/definitions/problem'
        '404':
          description: Unknown page title or revision
          schema:
            $ref: '#/definitions/problem'
        '409':
          description: Revision was restricted
          schema:
            $ref: '#/definitions/problem'
        '410':
          description: Page was deleted
          schema:
            $ref: '#/definitions/problem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_backend:
            request:
              uri: /{domain}/sys/parsoid/transform/sections/to/wikitext/{title}/{revision}
              body:
                sections: '{sections}'
      x-monitor: false

definitions:
  # A https://tools.ietf.org/html/draft-nottingham-http-problem
  problem:
    required:
      - type
    properties:
      type:
        type: string
      title:
        type: string
      detail:
        type: string
      instance:
        type: string

  revisions:
    description: The result format for revision listing
    required:
      - items
    properties:
      items:
        type: array
        $ref: revisionIdentifier

  listing:
    description: The result format for listings
    required:
      - items
    properties:
      items:
        type: array
        items:
          type: string

  data-parsoid:
    description: Result format for Parsoid data queries
    required:
      - counter
      - ids
    properties:
      counter:
        type: integer
        format: int32
      ids:
        type: object

  revision:
    description: Result format for revision items
    required:
      - count
      - items
    properties:
      count:
        type: integer
        format: int32
      items:
        type: array
        $ref: revisionInfo

  revisionInfo:
    description: Complete information about the revision
    properties:
      title:
        type: string
      page_id:
        type: integer
        format: int32
      rev:
        type: integer
        format: int32
      tid:
        type: string
      latest_rev:
        type: integer
        format: int32
      latest_tid:
        type: string
      nextrev_tid:
        type: string
      comment:
        type: string
      renames:
        type: array
        items:
          type: string
      restrictions:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          type: string
      user_id:
        type: integer
        format: int32
      user_text:
        type: string
      timestamp:
        type: string
        format: date-time
      redirect:
        type: boolean

  revisionIdentifier:
    description: Unique revision identifier
    properties:
      revision:
        type: integer
        format: int32
      tid:
        type: string
