swagger: '2.0'
info:
  version: '1.0.0-beta'
  title: CSS for mobile apps
  description: API for retrieving CSS for mobile apps
  termsOfService: https://www.mediawiki.org/wiki/REST_API#Terms_and_conditions
  contact:
    name: Reading Infrastructure
    url: https://www.mediawiki.org/wiki/Wikimedia_Reading_Infrastructure_team
  license:
    name: Apache licence, v2
    url: https://www.apache.org/licenses/LICENSE-2.0
paths:
  /css/mobile/{type}:
    x-route-filters:
      - path: lib/security_response_header_filter.js
    get:
      tags:
        - Mobile
      summary: Get CSS for mobile apps.
      description: |
        Gets common CSS mobile apps need to properly display pages using Page Content Service.
        In most cases all of the types are needed (preferably in this order):
        * base (Common mobile CSS from ResourceLoader)
        * pagelib (CSS from wikimedia-page-library)
        * site (Site-specific, mobile CSS from ResourceLoader, as defined in MediaWiki\:Mobile.css)

        The first two are the same regardless of what domain is used.
        For these we suggest meta.wikimedia.org.

        Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)
      produces:
        - application/json; charset=utf-8; profile="https://www.mediawiki.org/wiki/Specs/CSS/1.0.0"
        - application/problem+json
      parameters:
        - name: type
          in: path
          description: The desired CSS bundle
          type: string
          enum:
            - base
            - pagelib
            - site
          required: true
      responses:
        '200':
          description: Success
          headers:
            ETag:
              type: string
              description: Different values indicate that the content has changed
        default:
          description: Error
          schema:
            $ref: '#/definitions/problem'
      x-request-handler:
        - get_from_pcs:
            request:
              method: get
              uri: '{{options.host}}/{domain}/v1/data/css/mobile/{type}'
            return:
              status: 200
              headers: '{{ merge({"cache-control": options.response_cache_control},
                                 get_from_pcs.headers) }}'
              body: '{{get_from_pcs.body}}'
      x-monitor: false
