info:
  title: Graphoid sys API module
paths:
  /v1/store/{format}:
    post:
      x-setup-handler:
        - init:
            uri: /{domain}/sys/post_data/graphoid.request
        - init:
            uri: /{domain}/sys/key_value/graphoid.store.png
            body:
              keyType: string
              valueType: blob
        - init:
            uri: /{domain}/sys/key_value/graphoid.store.svg
            body:
              keyType: string
              valueType: blob
        - init:
            uri: /{domain}/sys/key_value/graphoid.preview.png
            body:
              keyType: string
              valueType: blob
              retention_policy:
                type: ttl
                ttl: '{$$.options.preview_ttl}'
        - init:
            uri: /{domain}/sys/key_value/graphoid.preview.svg
            body:
              keyType: string
              valueType: blob
              retention_policy:
                type: ttl
                ttl: '{$$.options.preview_ttl}'
      x-request-handler:
        - calculate_hash:
            request:
              method: put
              uri: /{domain}/sys/post_data/graphoid.request/hash
              body: '{$.request.body}'
        - check_storage:
            request:
              method: get
              uri: /{domain}/sys/key_value/graphoid.store.{format}/{$.calculate_hash.body}
              headers:
                cache-control: '{cache-control}'
            return_if:
              status: '2xx'
            return:
              status: 200
              headers: '{$.check_storage.headers}'
              body: '{$.check_storage.body}'
            catch:
              status: 404
        - load_data:
            request:
              method: post
              uri: /{domain}/sys/graphoid/v1/handler/graphoid.store/{format}
              headers:
                cache-control: '{cache-control}'
                x-resource-location: '{$.calculate_hash.body}'
              body: '{$.request.body}'
        - store_request:
            request:
              method: put
              uri: /{domain}/sys/post_data/graphoid.request/
              body: '{$.request.body}'
        - return_content:
            return:
              status: 200
              headers: '{$.load_data.headers}'
              body: '{$.load_data.body}'
  /v1/preview/{format}:
    post:
      x-request-handler:
        - calculate_hash:
            request:
              method: put
              uri: /{domain}/sys/post_data/graphoid.request/hash
              body: '{$$.merge($.request.body, {"x-restbase-mode": "preview"})}'
        - handle_req:
            request:
              method: post
              uri: /{domain}/sys/graphoid/v1/handler/graphoid.preview/{format}
              headers:
                x-resource-location: '{$.calculate_hash.body}'
                content-type: application/json
              body: '{$.request.body}'
  /v1/request/json/{hash}:
    get:
      x-request-handler:
        - check_request_storage:
            request:
              method: get
              uri: /{domain}/sys/post_data/graphoid.request/{hash}
            return:
              status: 200
              headers:
                content-type: application/json
              body: '{$.check_request_storage.body}'
  /v1/request/{format}/{hash}:
    get:
      x-request-handler:
        - check_storage:
            request:
              method: get
              uri: /{domain}/sys/key_value/graphoid.store.{format}/{hash}
              headers:
                cache-control: '{cache-control}'
            return_if:
              status: '2xx'
            return:
              status: 200
              headers: '{$.check_storage.headers}'
              body: '{$.check_storage.body}'
            catch:
              status: 404
        - check_preview_storage:
            request:
              method: get
              uri: /{domain}/sys/key_value/graphoid.preview.{format}/{hash}
              headers:
                cache-control: '{cache-control}'
            return_if:
              status: '2xx'
            return:
              status: 200
              headers: '{$.check_preview_storage.headers}'
              body: '{$.check_preview_storage.body}'
            catch:
              status: 404
        - load_request:
            request:
              uri: /{domain}/sys/post_data/graphoid.request/{hash}
        - handle_req:
            request:
              method: post
              # We would not be able to rerender preview content as we get 404 on prev step
              uri: /{domain}/sys/graphoid/v1/handler/graphoid.store/{format}
              headers:
                cache-control: '{cache-control}'
                x-resource-location: '{$.request.params.hash}'
                content-type: application/json
              body: '{$.load_request.body}'
  /v1/service_request:
    post:
      x-request-handler:
        - png:
            request:
              method: post
              uri: '{+$$.options.host}/www.mediawiki.org/v2/png'
              headers:
                content-type: 'application/json'
              body: '{$.request.body}'
          svg:
            request:
              method: post
              uri: '{+$$.options.host}/www.mediawiki.org/v2/svg'
              headers:
                content-type: 'application/json'
              body: '{$.request.body}'
        - return_result:
            return:
              status: 200
              body:
                png:
                  headers: '{$.png.headers}'
                  body: '{$.png.body}'
                svg:
                  headers: '{$.svg.headers}'
                  body: '{$.svg.body}'
  /v1/handler/{bucket}/{format}:
    post:
      x-request-handler:
        - graphoid:
            request:
              method: post
              uri: /{domain}/sys/graphoid/v1/service_request
              body: '{$.request.body}'
        - store_png:
            request:
              method: put
              uri: /{domain}/sys/key_value/{bucket}.png/{$.request.headers.x-resource-location}
              headers: '{$$.merge($$.strip($.graphoid.body.png.headers, "content-encoding"), {"x-resource-location": $.request.headers.x-resource-location})}'
              body: '{$.graphoid.body.png.body}'
          store_svg:
            request:
              method: put
              uri: /{domain}/sys/key_value/{bucket}.svg/{$.request.headers.x-resource-location}
              headers: '{$$.merge($$.strip($.graphoid.body.svg.headers, "content-encoding"), {"x-resource-location": $.request.headers.x-resource-location})}'
              body: '{$.graphoid.body.svg.body}'
        - return_result:
            return:
              status: 200
              headers: '{$$.merge($$.strip($.graphoid.body[$.request.params.format].headers, "content-encoding"), {"x-resource-location": $.request.headers.x-resource-location})}'
              body: '{$.graphoid.body[$.request.params.format].body}'


