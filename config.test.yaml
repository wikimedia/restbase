# RESTBase config

info:
  name: restbase

templates:

  wmf-content-1.0.0: &wp/content/1.0.0
    swagger: '2.0'
    # swagger options, overriding the shared ones from the merged specs (?)
    info: &wp/content-info/1.0.0
      version: 1.0.0-beta
      title: Wikimedia REST API
      description: >
          This API aims to provide coherent and low-latency access to
          Wikimedia content and services. It is currently in beta testing, so
          things aren't completely locked down yet. Each entry point has
          explicit stability markers to inform you about development status
          and change policy, according to [our API version
          policy](https://www.mediawiki.org/wiki/API_versioning).

          ### High-volume access
            - Don't perform more than 500 requests/s to this API.
            - Set a unique `User-Agent` header that allows us to contact you
              quickly. Email addresses or URLs of contact pages work well.
            - Consider using our [HTML
              dumps](https://phabricator.wikimedia.org/T17017) once they
              become available.

      termsOfService: https://wikimediafoundation.org/wiki/Terms_of_Use
      contact:
        name: the Wikimedia Services team
        url: http://mediawiki.org/wiki/RESTBase
      license:
        name: Apache2
        url: http://www.apache.org/licenses/LICENSE-2.0
    x-subspecs:
      - mediawiki/v1/content
      - mediawiki/v1/graphoid
      - mediawiki/v1/mobileapps
      - media/v1/mathoid
      - test
    securityDefinitions: &wp/content-security/1.0.0
      mediawiki_auth:
        description: Checks permissions using MW api
        type: apiKey
        in: header
        name: cookie
        x-internal-request-whitelist:
          - http://en.wikipedia.org/w/api.php
          - http://fr.wikipedia.org/w/api.php
          - http://en.wikipedia.beta.wmflabs.org/w/api.php
          # Left as a regex for test purpose
          - /http:\/\/parsoid\-beta\.wmflabs\.org/
      header_match:
        description: Checks client ip against one of the predefined whitelists
        x-error-message: This client is not allowed to use the endpoint
        x-whitelists:
          internal:
            - /^(?:::ffff:)?(?:10|127)\./

  wmf-sys-1.0.0: &wp/sys/1.0.0
    info:
      title: Default MediaWiki sys API module
      version: 1.0.0
    paths:
      /{module:table}: &wp/sys/table # Can use this anchor to share the table
        x-modules:
          # There can be multiple modules too per stanza, as long as the
          # exported symbols don't conflict. The operationIds from the spec
          # will be resolved against all of the modules.
          - name: restbase-mod-table-cassandra
            version: 1.0.0
            type: npm
            # See: https://github.com/wikimedia/restbase-mod-table-cassandra/blob/master/Readme.md#configuration
            options: # Passed to the module constructor
              conf:
                dbname: test.db.sqlite3 # ignored in cassandra, but useful in SQLite testing
                hosts: [localhost]
                keyspace: system
                username: cassandra
                password: cassandra
                defaultConsistency: one # or 'one' for single-node testing
                storage_groups:
                  - name: test.group.local
                    domains: /./

      /{module:page_revisions}: &wp/sys/page_revisions
        x-modules:
            - name: page_revisions
              version: 1.0.0
              type: file

      /{module:key_value}: &wp/sys/key_value
        x-modules:
          - name: key_value
            version: 1.0.0
            type: file

      /{module:key_rev_value}: &wp/sys/key_rev_value
        x-modules:
          - name: key_rev_value
            version: 1.0.0
            type: file

      /{module:post_data}: &wp/sys/post_data
        x-modules:
          - name: post_data
            version: 1.0.0
            type: file

      /{module:action}: &wp/sys/action
        x-modules:
          - name: action
            type: file
            options:
              apiRequest:
                method: post
                uri: http://{domain}/w/api.php
                headers:
                  host: '{$.request.params.domain}'
                body: '{$.request.body}'

      /{module:page_save}: &wp/sys/page_save
        x-modules:
          - name: page_save
            type: file

      /{module:parsoid}: &wp/sys/parsoid
        x-modules:
          - name: parsoid
            version: 1.0.0
            type: file
            options:
              parsoidHost: http://parsoid-beta.wmflabs.org
              # For local testing, use:
              # parsoidHost: http://localhost:8000

      /{module:graphoid}/v1/png/{title}/{revision}/{graph_id}:
        get:
          x-request-handler:
            - get_from_graphoid:
                request:
                  uri: http://graphoid.wikimedia.org/{domain}/v1/png/{title}/{revision}/{graph_id}

      /{module:mobileapps}:
        x-subspecs:
          - sys/v1/mobileapps

  global-content: &gb/content/1.0.0
    swagger: '2.0'
    info: *wp/content-info/1.0.0
    securityDefinitions: *wp/content-security/1.0.0
    x-subspecs:
      - media/v1/mathoid
      - analytics/v1/pageviews
      - test


  global-sys: &gb/sys/1.0.0
    info:
      title: global domain sys API module
      version: 1.0.0
    paths:
      /{module:table}: *wp/sys/table
      /{module:key_value}: *wp/sys/key_value
      /{module:post_data}: *wp/sys/post_data
      /{module:mathoid}/v1:
        x-subspecs:
          - sys/v1/mathoid
      /{module:pageviews}:
        x-modules:
          - name: pageviews
            type: file

  wp-default-1.0.0: &wp/default/1.0.0
    x-subspecs:
      - paths:
          /{api:v1}:
            x-subspec: *wp/content/1.0.0
      - paths:
          /{api:sys}:
            x-subspec: *wp/sys/1.0.0

  wp-secure-1.0.0: &wp/secure/1.0.0
    x-subspecs:
      - paths:
          /{api:v1}:
            x-subspec: *wp/content/1.0.0
            security:
              - mediawiki_auth:
                - read
      - paths:
          /{api:sys}:
            x-subspec: *wp/sys/1.0.0

  global-default-1.0.0: &gb/default/1.0.0
    x-subspecs:
      - paths:
          /{api:v1}:
            x-subspec: *gb/content/1.0.0
      - paths:
          /{api:sys}:
            x-subspec: *gb/sys/1.0.0


spec: &spec
  title: "The RESTBase root"
  # Some more general RESTBase info
  paths:
    # test domain
    /{domain:en.wikipedia.org}: *wp/default/1.0.0
    # For security testing we rely on mocks, so it's OK to use French wiki.
    /{domain:fr.wikipedia.org}: *wp/secure/1.0.0
    /{domain:en.wikipedia.beta.wmflabs.org}: *wp/default/1.0.0

    # global domain
    /{domain:wikimedia.org}: *gb/default/1.0.0


services:
  - name: restbase
    module: ./lib/server
    conf: 
      port: 7231
      spec: *spec
      salt: secret
      default_page_size: 1
      user_agent: RESTBase-testsuite
      service_uri:
        mobileapps: http://appservice.wmflabs.org
        mathoid: http://mathoid-tester.wmflabs.org

test:
  content_types:
    html: text/html; charset=utf-8; profile="mediawiki.org/specs/html/1.1.0"
    data-parsoid: application/json; profile="mediawiki.org/specs/data-parsoid/0.0.1"
    wikitext: text/plain; charset=utf-8; profile="mediawiki.org/specs/wikitext/1.0.0"

logging:
  name: restbase
  level: info
  #streams:
  ## XXX: Use gelf-stream -> logstash
  #- type: gelf
  #  host: <%= @logstash_host %>
  #  port: <%= @logstash_port %>

metrics:
  #type: txstatsd
  #host: localhost
  #port: 8125
